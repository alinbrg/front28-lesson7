* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}
body {
	padding-top: 58px;
}
img {
	width: 100%;
}
ul {
	list-style: none;
}
a {
	text-decoration: none;
}
.container {
	max-width: 1640px;
	margin: 0 auto;
	padding: 0 8px;
	width: 100%;
}

nav,
nav li {
	display: inline-block;
}

section img {
	height: 400px;
	object-fit: cover;
}
/* section{
  position:static;
} */
header a {
	color: white;
}

header {
	padding: 20px 0;
	background-color: blue;
	position: fixed;
	width: 100%;
	/* top: 0;
  left:0;
  bottom:0;
  right:0; */
	top: 0;
	left: 0;
	z-index: 100;
	transition-property: all;
	transition-duration: 3s;
	transition-delay: 1s;
	transition-timing-function: linear;
}
header:hover {
	background-color: darkcyan;
	top: 20px;
}
header a {
	transition-property: all;
	transition-duration: 1s;
	transition-timing-function: linear;
}

header:hover a {
	color: red;
	font-size: 40px;
	font-weight: bold;
}

.parent {
	display: inline-block;
	width: 400px;
	background-color: darkblue;
	margin: 10px;
	min-height: 400px;
	position: relative;
	border: 5px solid red;
}
.parent p {
	padding: 5px;
	background-color: lightcoral;
	position: absolute;
	bottom: 20px;
	left: 20px;
	width: calc(100% - 40px);
}

.parent:nth-child(2) {
	background-image: url("../images/2.jpg");
	/* background-size: contain; */
	/* background-repeat: no-repeat; */
	background-position: center;
}

.parent:nth-of-type(3) {
	background-image: url("../images/3.jpg");
	background-position: center;
	background-size: cover;
	/* background-blend-mode: darken; */
	transition: all 2s ease-in-out;
}

.parent:nth-child(3):hover {
	background-image: url("../images/2.jpg");
}

.bg {
	background-image: url("../images/1.jpg");
	background-size: cover;
	background-repeat: no-repeat;
	background-position: center;
	height: 400px;
	background-attachment: fixed;
}
.loader {
	border: 10px dotted red;
	width: 100px;
	height: 100px;
	/* border-radius: 50%; */
	position: fixed;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	/* animation: name duration timing-function delay iteration-count direction fill-mode; */
	animation-name: loader;
	animation-duration: 4s;
	animation-iteration-count: 2;
	animation-delay: 1s;
	animation-iteration-count: infinite;
	animation-timing-function: linear;
	animation-direction: alternate;
	animation-fill-mode: backwards;
}

/* @keyframes loader {
	from {
		background-color: blue;
	}
	to {
		background-color: red;
	}
} */
@keyframes loader {
	0% {
		background-color: blue;
		transform: translate(-50%, -50%) rotate(0);
	}
	30% {
		background-color: green;
		/* top: 60%;
		left: 60%; */
	}
	100% {
		background-color: red;
		transform: translate(-50%, -50%) rotate(360deg);
	}
}

.color-change {
	animation: color-change 2s ease-in-out infinite;
}
@keyframes color-change {
	0% {
		fill: red;
	}

	100% {
		fill: blue;
	}
}
